/**
 *  Copyright (C) 2015  Albert Zedlitz
 *  
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/* Variable declaration generated by agent:
 */
// var g_eezz_socket_addr = "ws://{host}:{port}";
// var g_eezz_arguments   = "{args}";
var g_eezz_web_socket;
window.onload = eezz_connect();

// Open and controlling the WEB socket
function eezz_connect() {
    alert('on connect');
	g_eezz_web_socket        = new WebSocket(g_eezz_socket_addr);
    g_eezz_web_socket.onopen = function() {
        window.console.log("open web socket ...");
        var x_body    = document.body;
        var x_json    = {"initialize": x_body.innerHTML, "args": g_eezz_arguments};
        g_eezz_web_socket.send(JSON.stringify(x_json));
    }
    
    /* Error handling: Reopen connection */
    g_eezz_web_socket.onerror = function(a_error) {
        alert('on error' + a_error);
        window.console.error(a_error);
    }

    /* Wait for the application and update the document          */
    g_eezz_web_socket.onmessage = function(a_event) {
       alert('onmessage');
       console.log('event  ' + a_event.data);
       var x_json = JSON.parse(a_event.data)

        if (x_json.update) {
           console.log('update  ');
            var x_array_descr = x_json.update;
            for (var i = 0; i < x_array_descr.length; i++) {
                var x_descr = x_array_descr[i];
                var x_elem  = document.getElementById(x_descr.id);
                dynamic_update(x_elem, x_descr.html, x_descr.attrs);
            }
        }
    }
}

// Dynamic update: The inner-HTML of the element is calculated by the server
// The result is send via WEB socket as json = {tag-name: html, ...}
function dynamic_update(a_element, a_json, a_attrs) {
    for (var x in a_json) {
        console.log('update element ' + x);
        x_structure = a_element.getElementsByTagName(x);
        x_structure[0].innerHTML = a_json[x];
    }
}

function eezyClick(aEvent, aElement) {
    var x_post = true;
    var x_json = JSON.parse(aElement.getAttribute('data-eezz-json'));

    if (x_post) {
        var x_response = JSON.stringify(x_json);
        g_eezz_web_socket.send(x_response);
    }
}
